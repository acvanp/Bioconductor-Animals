labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`)) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
frequency$author
which(frequency$author == "Kant")
which(frequency$author == "Locke")
which(frequency$author == "Locke ")
which(frequency$author == " Locke")
gutenberg_metadata[which(startsWith(gutenberg_metadata$author, "Kant") ),]
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$author, "Nietzsche") ),]
# 4363 Beyond Good and Evil
gutenberg_metadata[which(startsWith(gutenberg_metadata$author, "Locke, John") ),]
kant = gutenberg_download(5684)
nietzsche = gutenberg_download(4363)
locke = gutenberg_download(7370)
tidy_kant = kant %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_nietzsche = nietzsche %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_locke = locke %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
library(tidyr)
frequency <- bind_rows(mutate(tidy_kant, author = "Kant"),
mutate(tidy_nietzsche, author = "Nietzsche"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Kant`:`Nietzsche`)
which(frequency$author == "Nietzsche")
frequency$proportion
na.omit(frequency)
frequency = na.omit(frequency)
library(scales)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
frequency <- bind_rows(mutate(tidy_hume, author = "Hume"),
mutate(tidy_berkeley, author = "Berkeley"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Hume`:`Berkeley`)
library(scales)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
frequency <- bind_rows(mutate(tidy_hume, author = "Hume"),
mutate(tidy_nietzsche, author = "Nietzsche"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Hume`:`Berkeley`)
library(scales)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
frequency <- bind_rows(mutate(tidy_hume, author = "Hume"),
mutate(tidy_nietzsche, author = "Nietzsche"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Hume`:`Nietzsche`)
library(scales)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
frequency <- bind_rows(mutate(tidy_hume, author = "Hume"),
mutate(tidy_kant, author = "Kant"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Hume`:`Kant`)
library(scales)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
frequency <- bind_rows(mutate(tidy_hume, author = "Hume"),
mutate(tidy_berkeley, author = "Berkeley"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Hume`:`Berkeley`)
library(scales)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
gutenberg_download(4363)
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$author, "Nietzsche") ),]
tidy_nietzsche
tidy_nietzsche$word
tidy_kant$word
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$author, "Nietzsche") ),]
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$title, "Beyond Good and Evil") ),]
nietzsche = gutenberg_download(19634)
nietzsche
nietzsche = gutenberg_download(19634)
gutenberg_download(19634)
nietzsche = gutenberg_download(4363)
nietzsche
nietzsche = gutenberg_download(4363)
locke = gutenberg_download(7370)
tidy_kant = kant %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_nietzsche = nietzsche %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_locke = locke %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
library(tidyr)
frequency <- bind_rows(mutate(tidy_kant, author = "Kant"),
mutate(tidy_nietzsche, author = "Nietzsche"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Kant`:`Nietzsche`)
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$title, "On the Geneology of Morals") ),]
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$title, "On the Genealogy of Morals") ),]
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$title, "On the Genealogy of Morality") ),]
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$title, "Genealogy of Morality") ),]
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$title, "Geneology of Morality") ),]
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$author, "Nietzsche") ),]
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$gutenberg_author_id, "779") ),]
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$gutenberg_author_id= "779") ),]
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$gutenberg_author_id= 779) ),]
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$gutenberg_author_id, 779) ),]
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$author_id, 779) ),]
kant = gutenberg_download(5684)
nietzsche = gutenberg_download(	52190)
locke = gutenberg_download(7370)
tidy_kant = kant %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_nietzsche = nietzsche %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_locke = locke %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
library(tidyr)
frequency <- bind_rows(mutate(tidy_kant, author = "Kant"),
mutate(tidy_nietzsche, author = "Nietzsche"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Kant`:`Nietzsche`)
frequency = na.omit(frequency)
library(scales)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
nietzsche = gutenberg_download(	52190)
bind_rows(mutate(tidy_kant, author = "Kant"),
mutate(tidy_nietzsche, author = "Nietzsche"),
mutate(tidy_locke, author = "Locke"))
# expect a warning about rows with missing values being removed
ggplot(frequency) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
frequency$proportion
#5684 Metaphysical Elements of Ethics
gutenberg_metadata[which(startsWith(gutenberg_metadata$author, "Nietzsche") ),]
gutenberg_metadata[which(startsWith(gutenberg_metadata$title, "Ecce homo") ),]
gutenberg_download(52190)
kant = gutenberg_download(5684)
nietzsche = gutenberg_download(52190)
locke = gutenberg_download(7370)
tidy_kant = kant %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_nietzsche = nietzsche %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_locke = locke %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
library(tidyr)
frequency <- bind_rows(mutate(tidy_kant, author = "Kant"),
mutate(tidy_nietzsche, author = "Nietzsche"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Kant`:`Nietzsche`)
frequency = na.omit(frequency)
library(scales)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
frequency <- bind_rows(mutate(tidy_hume, author = "Hume"),
mutate(tidy_nietzsche, author = "Berkeley"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Hume`:`Berkeley`)
library(scales)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
nietzsche = gutenberg_download(4363)
tidy_nietzsche = nietzsche %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
frequency <- bind_rows(mutate(tidy_hume, author = "Hume"),
mutate(tidy_nietzsche, author = "Berkeley"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Hume`:`Berkeley`)
library(scales)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
kant = gutenberg_download(5684)
nietzsche = gutenberg_download(4363)
locke = gutenberg_download(7370)
tidy_kant = kant %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_nietzsche = nietzsche %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_locke = locke %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
library(tidyr)
frequency <- bind_rows(mutate(tidy_kant, author = "Kant"),
mutate(tidy_nietzsche, author = "Nietzsche"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Kant`:`Nietzsche`)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
frequency <- bind_rows(mutate(tidy_kant, author = "Kant"),
mutate(tidy_nietzsche, author = "bb"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Kant`:`bb`)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
frequency <- bind_rows(mutate(tidy_kant, author = "Kant"),
mutate(tidy_nietzsche, author = "Nietzsche"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Kant`:`Nietzsche`)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
frequency <- bind_rows(mutate(tidy_kant, author = "Kant"),
mutate(tidy_nietzsche, author = "_Nietzsche_"),
mutate(tidy_locke, author = "Locke")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Kant`:`_Nietzsche_`)
# expect a warning about rows with missing values being removed
ggplot(frequency, aes(x = proportion, y = `Locke`, color = abs(`Locke` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Locke", x = NULL)
